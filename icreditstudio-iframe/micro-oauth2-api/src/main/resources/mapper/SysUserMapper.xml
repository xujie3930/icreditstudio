<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.micro.cloud.modules.system.user.mapper.SysUserMapper">

  <resultMap id="userInfoMap" type="com.micro.cloud.modules.system.user.vo.CommonUserInfoRepVO">
    <result column="id" property="id"/>
    <result column="username" property="username"/>
    <result column="userType" property="userType"/>
    <result column="orgId" property="orgId"/>
    <result column="org_name" property="orgName"/>
    <result column="application_code" property="applicationCode"/>
   <!-- <collection property="roles" ofType="com.micro.cloud.domian.dto.UserRoles"
      javaType="java.util.ArrayList" select="getUserRoles" column="id"/>-->
  </resultMap>

  <resultMap id="roleMap" type="com.micro.cloud.domian.dto.UserRoles">
    <id column="id" property="id" jdbcType="VARCHAR"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="type" property="type" jdbcType="VARCHAR"/>
  </resultMap>

  <update id="updateUserStatusBatch">
    update sys_user set status = #{status,jdbcType=TINYINT}
    <where>
      <if test="ids != null and ids.size() > 0">
        sys_user_id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">
          #{id,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
  </update>
  <select id="getCommonInfo" resultMap="userInfoMap">
    select user.sys_user_id as id,
           user.user_name   as username,
           user.real_name   as realName,
           user.type        as userType,
           org.sys_org_id   as orgId,
           org.org_name,
           app.application_code
    from sys_user user
           left join sys_user_org_ref ref on user.sys_user_id = ref.sys_user_id
           left join sys_org org on ref.sys_org_id = org.sys_org_id
           left join sys_application app on user.application_id = app.sys_application_id
    where user.sys_user_id = #{userId}
  </select>

  <select id="getUserRoles" resultMap="roleMap">
    select role.sys_role_id as id,
           role.role_name   as name,
           role.type
    from sys_role role
           left join sys_user_role_ref ref on role.sys_role_id = ref.sys_role_id
           left join sys_user user on ref.sys_user_id = user.sys_user_id
    where user.sys_user_id = #{userId}
  </select>
  <select id="remainingUser" resultType="com.micro.cloud.modules.system.role.vo.RemainingUserPageRepVO">
    select user.sys_user_id as userId, user.user_name as username,user.status, org.sys_org_id as orgId, org.org_name as
    orgName
    from sys_user user
    left join sys_user_org_ref ref on user.sys_user_id = ref.sys_user_id
    left join sys_org org on ref.sys_org_id = org.sys_org_id
    <where>
      user.status = 1
      <if test="vo.type != null">
        and user.type = #{vo.type,jdbcType=TINYINT}
      </if>
      <if test="vo.name != null and vo.name != ''">
        and user.user_name like concat ('%', #{vo.name,jdbcType=VARCHAR} ,'%'})
      </if>
      <if test="vo.orgId != null and vo.orgId != ''">
        and org.sys_org_id = #{vo.orgId,jdbcType=VARCHAR}
      </if>
      <if test="userIds != null and userIds.size() > 0">
        and user.sys_user_id not in
        <foreach collection="userIds" open="(" separator="," close=")" item="id">
          #{id,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
  </select>
</mapper>
