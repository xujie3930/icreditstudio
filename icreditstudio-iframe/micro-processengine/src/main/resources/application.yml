server:
  port: 9528
spring:
  profiles:
    active: dev
  application:
    name: micro-processengine
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.0.178:8848
        group: DEV
management:
  endpoints:
    web:
      exposure:
        include: "*"

# Find more available configuration properties on the following pages of the documentation.
# https://docs.camunda.org/manual/latest/user-guide/camunda-bpm-run/#configure-camunda-bpm-run
# https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/#camunda-engine-properties
camunda.bpm:
  generic-properties.properties:
    javaSerializationFormatEnabled: true
  #是否自动发布
  auto-deployment-enabled: false
  admin-user:
    id: jnh
    password: jnh123
  run:
    # https://docs.camunda.org/manual/latest/user-guide/camunda-bpm-run/#cross-origin-resource-sharing
    cors:
      enabled: true
      allowed-origins: "*"

  # datasource configuration is required
  #spring.datasource:
  #  url: jdbc:mysql://192.18.1.182:3306/camunda714?characterEncoding=UTF-8&useUnicode=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
  #  driver-class-name: com.mysql.cj.jdbc.Driver
  #  username: root
  #  password: 1qaz2WSX
  # By default, Spring Boot serves static content from any directories called /static or /public or /resources or
  # /META-INF/resources in the classpath. To prevent users from accidentally sharing files, this is disabled here by setting static locations to NULL.
  # https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-static-content

#spring.web.resources:
#  static-locations: NULL
# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 打印日志
  mapper-locations: classpath*:mapper/*.xml

micro:
  info:
    version: 1.0.0
    base-package: com.micro.cloud
  swagger:
    title: IPlatform管理后台
    description: 系统管理接口文档
    version: ${micro.info.version}
    base-package: ${micro.info.base-package}.modules



minio:
  endpoint: http://192.168.0.210:9000  #Minio服务所在地址
  bucketName: tcc #存储桶名称
  accessKey: minioadmin #访问的key
  secretKey: minioadmin #访问的秘钥


